name: Continuous Delivery

on:
  push:
    branches:
      - sprint3-workflows  # เปลี่ยนจาก main เป็น sprint3-workflows

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Launch EC2 Instance
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0866a3c8686eaeeba \ # Ubuntu Noble 24.04 AMI
          --count 1 \
          --instance-type t2.micro \
          --key-name ${{ secrets.AWS_KP_NAME }} \
          --security-group-ids ${{ secrets.AWS_SG_ID }} \
          --user-data file://user-data.sh \
          --query 'Instances[0].InstanceId' \
          --output text)
        echo "Launched EC2 Instance: $INSTANCE_ID"

    - name: Install Docker on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_KP_NAME }}.pem ubuntu@$(aws ec2 describe-instances --instance-id $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text) << 'EOF'
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker ubuntu
        EOF
        echo "Docker installed and started on EC2 Instance"

    - name: Build and Push Docker Images for Front-End
      run: |
        docker build -t ${{ secrets.FRONTEND_IMAGE_NAME }} ./frontend/
        docker tag ${{ secrets.FRONTEND_IMAGE_NAME }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.FRONTEND_REPO }}
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.FRONTEND_REPO }}

    - name: Build and Push Docker Images for Back-End
      run: |
        docker build -t ${{ secrets.BACKEND_IMAGE_NAME }} ./backend/
        docker tag ${{ secrets.BACKEND_IMAGE_NAME }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.BACKEND_REPO }}
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.BACKEND_REPO }}

    - name: Run Docker Containers on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_KP_NAME }}.pem ubuntu@$(aws ec2 describe-instances --instance-id $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text) << 'EOF'
          sudo docker run -d -p 80:80 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.FRONTEND_REPO }}:latest
          sudo docker run -d -p 8080:8080 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.BACKEND_REPO }}:latest
        EOF
        echo "Docker containers for Front-End and Back-End are running on EC2 Instance."
